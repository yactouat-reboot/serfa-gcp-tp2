name: 4.3 module example 2 CICD pipeline

# ici vous avez le déclencheur de votre pipeline;
# contrairement à Google Cloud Build, vous pouvez le configurer d'ici
on:
  push:
    branches: ["main"]

# les "jobs" sont les étapes de votre pipeline
jobs:

    # CONTINUOUS DEPLOYMENT
    push-image-to-gar:
      runs-on: ubuntu-latest
      # permet d'éviter les race conditions
      steps:
        - uses: actions/checkout@v4
        - name: se login au Google Artifact Registry
          uses: docker/login-action@v3
          with:
            registry: europe-west1-docker.pkg.dev
            username: _json_key
            password: ${{ secrets.CLOUD_RUN_DEPLOYER_SA_KEY }}
        - id: docker-push-tagged
          name: Tag Docker image and push to Google Artifact Registry
          uses: docker/build-push-action@v5
          with:
            file: ./prod.Dockerfile
            context: .
            push: true
            tags: |
             europe-west1-docker.pkg.dev/serfa-gcp/serfa-gcp-tp/serfagcp2:latest
             europe-west1-docker.pkg.dev/serfa-gcp/serfa-gcp-tp/serfagcp2:${{ github.sha }}

    # CONTINUOUS DEPLOYMENT
    deploy-to-cloud-run:
        runs-on: ubuntu-latest
        # permet d'éviter les race conditions
        needs: push-image-to-gar
        steps:
          # cette action me permet de me connecter au GCP en utilisant ma JSON key
          - uses: 'google-github-actions/auth@v2'
            with:
              credentials_json: '${{ secrets.CLOUD_RUN_DEPLOYER_SA_KEY }}'
  
            # on install le logiciel en ligne de commande `gcloud` sur le runner de GitHub
          - name: "set up Google Cloud SDK"
            uses: "google-github-actions/setup-gcloud@v2"

          # j'utilise `gcloud` pour déployer mon job Cloud Run
          - name: "update Cloud Run job"
            run: |
             gcloud run jobs deploy screenshotter --image=europe-west1-docker.pkg.dev/serfa-gcp/serfa-gcp-tp/serfagcp2:latest --region=europe-west1